---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# github-pull-request-action
name: "#️⃣ GitHub Pull Request"
description: "Identifies the pull request number and gathers metrics"

inputs:
  # Optional
  PULL_REQUEST:
    description: "Optional pull request number to query"
    required: false
    # Will enumerate from the current pull request, environment permitting
    default: "${{ github.event.pull_request.number }}"
  EXIT_ON_FAIL:
    description: "Exit with error if cannot identify pull request"
    required: false
    default: "true"

outputs:
  # Mandatory
  PULL_REQUEST:
    description: "The enumerated pull request value, when not provided"
    value: ${{ steps.parse.outputs.pull_request }}
  PR_COMMITS:
    description: "Number of commits in the pull request"
    value: ${{ steps.parse.outputs.pr_commits }}

runs:
  using: "composite"
  steps:
    # Primarily for if/when using self-hosted/custom runners
    - name: "Check GitHub CLI availability"
      shell: bash
      run: |
        # Check GitHub CLI availability
        GH_CLI=$(which gh)
        if [ ! -x "$GH_CLI" ]; then
          echo "Error: GitHub CLI was NOT found in PATH ❌"; exit 1
        fi

    - name: "Extract pull-request data"
      id: parse
      if: inputs.PULL_REQUEST !='' && github.event_name == 'pull_request_target'
      shell: bash
      # yamllint disable rule:line-length
      run: |
        # Extract pull-request data
        set -o pipefail
        echo "Pull request number: ${{ inputs.PULL_REQUEST }} ✅"
        echo "pull_request=${{ inputs.PULL_REQUEST }}" >> "$GITHUB_ENV"
        echo "pull_request=${{ inputs.PULL_REQUEST }}" >> "$GITHUB_OUTPUT"
        num_commits="$(gh pr view ${{ inputs.PULL_REQUEST }} --json commits | jq '.[] | length')"
        echo "Number of commits: $num_commits ✅"
        echo "PR_COMMITS=$num_commits" >> "$GITHUB_ENV"
        echo "PR_COMMITS=$num_commits" >> "$GITHUB_OUTPUT"
      env:
        GH_TOKEN: ${{ github.token }}

    - name: "Not triggered by pull request"
      if: github.event_name != 'pull_request_target'
      shell: bash
      run: |
        # Not triggered by pull request
        echo "Error: action not related to a valid pull request ❌"
        if [ "f$EXIT_ON_FAIL" = "ftrue" ]; then
          # Dependent on the action's inputs
          exit 1
        fi
