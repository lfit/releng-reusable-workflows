---
name: Packer verify

# yamllint disable-line rule:truthy
on:
  workflow_call:
    inputs:
      GERRIT_BRANCH:
        description: "Branch that change is against"
        required: true
        type: string
      GERRIT_CHANGE_ID:
        description: "The ID for the change"
        required: true
        type: string
      GERRIT_CHANGE_NUMBER:
        description: "The Gerrit number"
        required: true
        type: string
      GERRIT_CHANGE_URL:
        description: "URL to the change"
        required: true
        type: string
      GERRIT_EVENT_TYPE:
        description: "Type of Gerrit event"
        required: true
        type: string
      GERRIT_PATCHSET_NUMBER:
        description: "The patch number for the change"
        required: true
        type: string
      GERRIT_PATCHSET_REVISION:
        description: "The revision sha"
        required: true
        type: string
      GERRIT_PROJECT:
        description: "Project in Gerrit"
        required: true
        type: string
      GERRIT_REFSPEC:
        description: "Gerrit refspec of change"
        required: true
        type: string
      ENV_VARS:
        # yamllint disable-line rule:line-length
        description: "Pass GitHub variables to be exported as environment variables via `toJSON(vars)` or specific variables encoded in JSON format"
        required: false
        default: "{}"
        type: string
    secrets:
      ENV_SECRETS:
        # yamllint disable-line rule:line-length
        description: "Pass GitHub secrets to be exported as environment variables via `toJSON(secrets)` or specific secrets encoded in JSON format"
        required: false
      CLOUDS_ENV_B64:
        description: "Packer cloud environment credentials"
        required: true
      CLOUDS_YAML_B64:
        description: "Openstack cloud environment credentials"
        required: true

env:
  OS_CLOUD: "vex"
  PACKER_VERSION: "1.9.1"

concurrency:
  # yamllint disable-line rule:line-length
  group: compose-packer-${{ github.workflow }}-${{ github.event.inputs.GERRIT_CHANGE_ID || github.run_id }}
  cancel-in-progress: true

jobs:
  packer-validator:
    runs-on: ubuntu-latest
    steps:
      - name: Gerrit Checkout
        # yamllint disable-line rule:line-length
        uses: lfit/checkout-gerrit-change-action@57bf0435f739fbbc7ce4cc85c9c3b8a386c6f84b  # v0.6
        with:
          gerrit-refspec: ${{ inputs.GERRIT_REFSPEC }}
          gerrit-project: ${{ inputs.GERRIT_PROJECT }}
          gerrit-url: ${{ vars.GERRIT_URL }}
          delay: "0s"
          submodules: "true"
      - name: Check for changes
        # yamllint disable-line rule:line-length
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50  # v2.11.1
        id: changes
        with:
          base: ${{ inputs.GERRIT_BRANCH }}
          ref: ${{ inputs.GERRIT_PATCHSET_REVISION }}
          filters: |
            src:
              - 'packer/**'
      - name: Setup packer
        if: steps.changes.outputs.src == 'true'
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: ${{ env.PACKER_VERSION }}
      - name: Export env variables
        if: steps.changes.outputs.src == 'true'
        uses: infovista-opensource/vars-to-env-action@1.0.0
        with:
          secrets: ${{ inputs.ENV_VARS }}
      - name: Export env secrets
        if: steps.changes.outputs.src == 'true'
        uses: infovista-opensource/vars-to-env-action@1.0.0
        with:
          secrets: ${{ secrets.ENV_SECRETS }}
          include: CLOUDS_ENV_B64, CLOUDS_YAML_B64
      - name: Create cloud-env file required for packer
        id: create-cloud-env-file
        if: steps.changes.outputs.src == 'true'
        shell: /usr/bin/bash {0}
        # yamllint disable rule:line-length
        run: |
          echo "${{ env.CLOUDS_ENV_B64 }}" | sed 's/^ */::add-mask::/'
          clouds_env_b64="${{ env.CLOUDS_ENV_B64 }}"
          echo "${clouds_env_b64}" | base64 --decode > "${GITHUB_WORKSPACE}/cloud-env.pkrvars.hcl"
        # yamllint enable rule:line-length
      - name: Create cloud.yaml file for openstack client
        id: create-cloud-yaml-file
        if: steps.changes.outputs.src == 'true'
        shell: /usr/bin/bash {0}
        # yamllint disable rule:line-length
        run: |
          mkdir -p "$HOME/.config/openstack"
          echo "${{ env.CLOUDS_YAML_B64 }}" | sed 's/^ */::add-mask::/'
          clouds_yaml_b64="${{ env.CLOUDS_YAML_B64 }}"
          echo "${clouds_yaml_b64}" | base64 --decode > "$HOME/.config/openstack/clouds.yaml"
        # yamllint enable rule:line-length
      - name: Setup Python
        if: steps.changes.outputs.src == 'true'
        # yamllint disable-line rule:line-length
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c  # v5.0.0
        with:
          python-version: "3.11"
      - name: Install openstack deps
        id: install-openstack-deps
        if: steps.changes.outputs.src == 'true'
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install python-openstackclient
          pip freeze
      - name: Verify packer files
        if: steps.changes.outputs.src == 'true'
        shell: bash
        # yamllint disable rule:line-length
        run: |
          set -x
          cd packer

          varfiles=(common-packer/vars/*.pkrvars.hcl)
          templates=(templates/*.pkr.hcl)

          mkdir -p "${GITHUB_WORKSPACE}/logs"
          PACKER_LOGS_DIR="${GITHUB_WORKSPACE}/logs"

          for varfile in "${varfiles[@]}"; do
              if [[ "$varfile" == *"cloud-env.json"* ]] || \
                 [[ "$varfile" == "vars/*.json" ]] || \
                 [[ "$varfile" == *"cloud-env.pkrvars.hcl"* ]] || \
                 [[ "$varfile" == *"cloud-env-aws.pkrvars.hcl"* ]] || \
                 [[ "$varfile" == "vars/*.pkrvars.hcl" ]]; then
                  continue
              fi

              echo "::group::$varfile"
              echo "-----> Test var: $varfile"
              for template in "${templates[@]}"; do
                  if [[ "$template" == *"variables.pkr.hcl"* ]] || \
                     [[ "$template" == *"variables.auto.pkr.hcl"* ]]; then
                      continue
                  fi

                  if [[ "${template#*.}" == "pkr.hcl" ]]; then
                      echo "packer init $template ..."
                      packer init "$template"
                  fi

                  LOG_FILE="packer-validate-${varfile##*/}-${template##*/}.log"
                  export PACKER_LOG="yes"
                  export PACKER_LOG_PATH="$PACKER_LOGS_DIR/$LOG_FILE"
                  if output=$(OS_CLOUD=${{ env.OS_CLOUD }} packer validate \
                        -var-file="${GITHUB_WORKSPACE}/cloud-env.pkrvars.hcl" \
                        -var-file="$varfile" "$template"); then
                      echo "$template: $output"
                  else
                      echo "$template: $output"
                      exit 1
                  fi
              done
              echo "::endgroup::"
          done
        # yamllint enable rule:line-length
